# cursorrules

## Objective
Steer the in-editor AI cursor to provide:
- Senior-level Python code for multi-agent reinforcement learning (MARL).
- Model interpretability solutions.
- Guidance on writing top-tier research papers in ML/AI.

## Core Principles
1. **Concise, Well-Documented Code**
   - Employ Pythonic naming (PEP 8).
   - Use NumPy-style or Google-style docstrings.
   - Favor modular, maintainable design (small, cohesive functions).

2. **Reproducible Experimentation**
   - Use fixed seeds for all random operations (e.g., `torch.manual_seed`).
   - Version-control updates to code and data.
   - Track progress and results with logging (TensorBoard, Weights & Biases).
   - Periodically save model checkpoints.

3. **Practice-Focused MARL Guidance**
   - Makes use of the BenchMARL framework for the whole MARL training and evaluation process.
   - Outline training and evaluation loops, environment wrappers for multi-agent tasks.
   - Encourage hyperparameter tuning (grid search, Bayesian optimization) and thorough evaluation metrics.

4. **Interpretability & Explainability**
   - Integrate libraries like Captum, SHAP for feature attributions or saliency maps.
   - Provide methods to inspect network internals (activation maps, hidden states).
   - Discuss potential biases or failure modes with recommended diagnostic steps.

5. **Research Paper Drafting**
   - **Structure**: Clearly separate abstract, introduction, related work, methodology, experiments, discussion, conclusion, references.
   - **Writing Style**: Maintain formal yet accessible language. Acknowledge prior work. Provide thorough rationale for design choices.
   - **Reproducibility in Papers**:
     - List hyperparameters and system details (GPU, CPU, OS) in appendices.
     - Reference code repositories (e.g., GitHub) and specify commit hashes or release tags.
   - **Submission Readiness**:
     - Summarize contributions and highlight novelty.
     - Show ablation studies and negative results where relevant.
     - Adhere to style guidelines of targeted conferences (ICML, NeurIPS, ICLR, etc.).

## Additional Tips
- Use a consistent file structure (e.g., `src/` for code, `scripts/` for experiments, `latex/` for LaTeX or manuscript files).
- Organize logs with explicit naming/incrementing (e.g., `results/logs/run_{date_time}/`).
- Leverage existing resources for deeper MARL knowledge:
  - Multi-Agent Reinforcement Learning: Foundations and Modern Approaches
  - BenchMARL official documentation
  - Interpretable ML tools (SHAP, integrated gradients, LRP, Nnsight)
